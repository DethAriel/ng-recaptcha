"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[222],{7222:(S,r,e)=>{e.r(r),e.d(r,{DemoModule:()=>v});var o=e(6814),h=e(9168),c=e(9776),u=e(1386),s=e(9212);function j(a,t){1&a&&(s.TgZ(0,"h3"),s._uU(1,"Most recent token"),s.qZA())}function g(a,t){if(1&a&&(s.TgZ(0,"pre"),s._uU(1),s.qZA()),2&a){const n=s.oxw();s.xp6(1),s.Oqu(n.formatToken(n.recentToken))}}function m(a,t){1&a&&(s.TgZ(0,"h3",3),s._uU(1,"Most recent error"),s.qZA())}function _(a,t){if(1&a&&(s.TgZ(0,"pre",3),s._uU(1),s.qZA()),2&a){const n=s.oxw();s.xp6(1),s.Oqu(n.recentError.error||"Most recent execution resulted in error")}}function d(a,t){1&a&&(s.TgZ(0,"pre"),s._uU(1,"(empty)"),s.qZA())}function f(a,t){if(1&a&&(s._uU(0," Token: "),s.TgZ(1,"code"),s._uU(2),s.qZA()),2&a){const n=s.oxw().$implicit,l=s.oxw(2);s.xp6(2),s.Oqu(l.formatToken(n.token))}}function y(a,t){if(1&a&&(s.TgZ(0,"span",3),s._uU(1,"Error"),s.qZA(),s._uU(2,": "),s.TgZ(3,"code"),s._uU(4),s.qZA()),2&a){const n=s.oxw().$implicit;s.xp6(4),s.Oqu(n.error||"This execution resulted in error")}}function b(a,t){if(1&a&&(s.TgZ(0,"li"),s._uU(1," Action: "),s.TgZ(2,"code"),s._uU(3),s.qZA(),s._uU(4,". "),s.YNc(5,f,3,1,"ng-template",5)(6,y,5,1,"ng-template",5),s.qZA()),2&a){const n=t.$implicit;s.xp6(3),s.Oqu(n.action),s.xp6(2),s.Q6J("ngIf",n.token),s.xp6(1),s.Q6J("ngIf",!n.token)}}function x(a,t){if(1&a&&(s.TgZ(0,"ol"),s.YNc(1,b,7,3,"li",4),s.qZA()),2&a){const n=s.oxw();s.xp6(1),s.Q6J("ngForOf",n.executionLog)}}let k=(()=>{var a;class t{constructor(l){this.recaptchaV3Service=l,this.recentToken="",this.executionLog=[]}executeAction(l){this.singleExecutionSubscription&&this.singleExecutionSubscription.unsubscribe(),this.singleExecutionSubscription=this.recaptchaV3Service.execute(l).subscribe(p=>{this.recentToken=p,this.recentError=void 0},p=>{this.recentToken="",this.recentError={error:p}})}ngOnInit(){this.allExecutionsSubscription=this.recaptchaV3Service.onExecute.subscribe(l=>this.executionLog.push(l)),this.allExecutionErrorsSubscription=this.recaptchaV3Service.onExecuteError.subscribe(l=>this.executionLog.push(l))}ngOnDestroy(){this.allExecutionsSubscription&&this.allExecutionsSubscription.unsubscribe(),this.allExecutionErrorsSubscription&&this.allExecutionErrorsSubscription.unsubscribe(),this.singleExecutionSubscription&&this.singleExecutionSubscription.unsubscribe()}formatToken(l){return l?`${l.substring(0,7)}...${l.substring(l.length-7)}`:"(empty)"}}return(a=t).\u0275fac=function(l){return new(l||a)(s.Y36(c.YC))},a.\u0275cmp=s.Xpm({type:a,selectors:[["recaptcha-demo"]],decls:12,vars:6,consts:[[3,"click"],[4,"ngIf"],["class","error",4,"ngIf"],[1,"error"],[4,"ngFor","ngForOf"],[3,"ngIf"]],template:function(l,p){1&l&&(s.TgZ(0,"button",0),s.NdJ("click",function(){return p.executeAction("homepage")}),s._uU(1,'Execute "homepage" action'),s.qZA(),s.TgZ(2,"button",0),s.NdJ("click",function(){return p.executeAction("shoppingCart")}),s._uU(3,'Execute "shoppingCart" action'),s.qZA(),s.YNc(4,j,2,0,"h3",1)(5,g,2,1,"pre",1)(6,m,2,0,"h3",2)(7,_,2,1,"pre",2),s.TgZ(8,"h3"),s._uU(9,"reCAPTCHA execution log"),s.qZA(),s.YNc(10,d,2,0,"pre",1)(11,x,2,1,"ol",1)),2&l&&(s.xp6(4),s.Q6J("ngIf",p.recentToken),s.xp6(1),s.Q6J("ngIf",p.recentToken),s.xp6(1),s.Q6J("ngIf",p.recentError),s.xp6(1),s.Q6J("ngIf",p.recentError),s.xp6(3),s.Q6J("ngIf",0===p.executionLog.length),s.xp6(1),s.Q6J("ngIf",p.executionLog.length>0))},dependencies:[o.sg,o.O5],styles:[".error[_ngcontent-%COMP%]{color:#dc143c}"]}),t})();var i=e(2598);const E=[{path:"",component:k,data:{page:{feature:"v3",title:"reCAPTCHA v3 Example",content:{component:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span>, <span class="hljs-title class_">OnDestroy</span>, <span class="hljs-title class_">OnInit</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@angular/core&quot;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">OnExecuteData</span>, <span class="hljs-title class_">OnExecuteErrorData</span>, <span class="hljs-title class_">ReCaptchaV3Service</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;ng-recaptcha&quot;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Subscription</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;rxjs&quot;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&quot;recaptcha-demo&quot;</span>,\n  <span class="hljs-attr">styles</span>: [\n    <span class="hljs-string">`\n      .error {\n        color: crimson;\n      }\n    `</span>,\n  ],\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&quot;./v3-demo.component.html&quot;</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RecaptchaV3DemoComponent</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">OnInit</span>, <span class="hljs-title class_">OnDestroy</span> {\n  <span class="hljs-keyword">public</span> recentToken = <span class="hljs-string">&quot;&quot;</span>;\n  <span class="hljs-comment">// eslint-disable-next-line @typescript-eslint/no-explicit-any</span>\n  <span class="hljs-keyword">public</span> recentError?: { <span class="hljs-attr">error</span>: <span class="hljs-built_in">any</span> };\n  <span class="hljs-keyword">public</span> <span class="hljs-keyword">readonly</span> <span class="hljs-attr">executionLog</span>: <span class="hljs-title class_">Array</span>&lt;<span class="hljs-title class_">OnExecuteData</span> | <span class="hljs-title class_">OnExecuteErrorData</span>&gt; = [];\n\n  <span class="hljs-keyword">private</span> <span class="hljs-attr">allExecutionsSubscription</span>: <span class="hljs-title class_">Subscription</span>;\n  <span class="hljs-keyword">private</span> <span class="hljs-attr">allExecutionErrorsSubscription</span>: <span class="hljs-title class_">Subscription</span>;\n  <span class="hljs-keyword">private</span> <span class="hljs-attr">singleExecutionSubscription</span>: <span class="hljs-title class_">Subscription</span>;\n\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> recaptchaV3Service: ReCaptchaV3Service</span>) {}\n\n  <span class="hljs-keyword">public</span> <span class="hljs-title function_">executeAction</span>(<span class="hljs-attr">action</span>: <span class="hljs-built_in">string</span>): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">singleExecutionSubscription</span>) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">singleExecutionSubscription</span>.<span class="hljs-title function_">unsubscribe</span>();\n    }\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">singleExecutionSubscription</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">recaptchaV3Service</span>.<span class="hljs-title function_">execute</span>(action).<span class="hljs-title function_">subscribe</span>(\n      <span class="hljs-function">(<span class="hljs-params">token</span>) =&gt;</span> {\n        <span class="hljs-variable language_">this</span>.<span class="hljs-property">recentToken</span> = token;\n        <span class="hljs-variable language_">this</span>.<span class="hljs-property">recentError</span> = <span class="hljs-literal">undefined</span>;\n      },\n      <span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> {\n        <span class="hljs-variable language_">this</span>.<span class="hljs-property">recentToken</span> = <span class="hljs-string">&quot;&quot;</span>;\n        <span class="hljs-comment">// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment</span>\n        <span class="hljs-variable language_">this</span>.<span class="hljs-property">recentError</span> = { error };\n      },\n    );\n  }\n\n  <span class="hljs-keyword">public</span> <span class="hljs-title function_">ngOnInit</span>(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">allExecutionsSubscription</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">recaptchaV3Service</span>.<span class="hljs-property">onExecute</span>.<span class="hljs-title function_">subscribe</span>(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span>\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">executionLog</span>.<span class="hljs-title function_">push</span>(data),\n    );\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">allExecutionErrorsSubscription</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">recaptchaV3Service</span>.<span class="hljs-property">onExecuteError</span>.<span class="hljs-title function_">subscribe</span>(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span>\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">executionLog</span>.<span class="hljs-title function_">push</span>(data),\n    );\n  }\n\n  <span class="hljs-keyword">public</span> <span class="hljs-title function_">ngOnDestroy</span>(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">allExecutionsSubscription</span>) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">allExecutionsSubscription</span>.<span class="hljs-title function_">unsubscribe</span>();\n    }\n    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">allExecutionErrorsSubscription</span>) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">allExecutionErrorsSubscription</span>.<span class="hljs-title function_">unsubscribe</span>();\n    }\n    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">singleExecutionSubscription</span>) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">singleExecutionSubscription</span>.<span class="hljs-title function_">unsubscribe</span>();\n    }\n  }\n\n  <span class="hljs-keyword">public</span> <span class="hljs-title function_">formatToken</span>(<span class="hljs-attr">token</span>: <span class="hljs-built_in">string</span>): <span class="hljs-built_in">string</span> {\n    <span class="hljs-keyword">if</span> (!token) {\n      <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;(empty)&quot;</span>;\n    }\n\n    <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">${token.substring(<span class="hljs-number">0</span>, <span class="hljs-number">7</span>)}</span>...<span class="hljs-subst">${token.substring(token.length - <span class="hljs-number">7</span>)}</span>`</span>;\n  }\n}\n',html:'<span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;executeAction(&#x27;homepage&#x27;)&quot;</span>&gt;</span>Execute &quot;homepage&quot; action<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;executeAction(&#x27;shoppingCart&#x27;)&quot;</span>&gt;</span>Execute &quot;shoppingCart&quot; action<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentToken&quot;</span>&gt;</span>Most recent token<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentToken&quot;</span>&gt;</span>{{ formatToken(recentToken) }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentError&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>Most recent error<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentError&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>{{ recentError.error || &quot;Most recent execution resulted in error&quot; }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>reCAPTCHA execution log<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;executionLog.length === 0&quot;</span>&gt;</span>(empty)<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">ol</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;executionLog.length &gt; 0&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">&quot;let entry of executionLog&quot;</span>&gt;</span>\n    Action: <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>{{ entry.action }}&lt;/code\n    &gt;.\n    <span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> [<span class="hljs-attr">ngIf</span>]=<span class="hljs-string">&quot;entry.token&quot;</span>&gt;</span>\n      Token: <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>{{ formatToken(entry.token) }}<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> [<span class="hljs-attr">ngIf</span>]=<span class="hljs-string">&quot;!entry.token&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>Error<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>:\n      <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>{{ entry.error || &quot;This execution resulted in error&quot; }}<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span>\n',module:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NgModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@angular/core&quot;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CommonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@angular/common&quot;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Routes</span>, <span class="hljs-title class_">RouterModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@angular/router&quot;</span>;\n\n<span class="hljs-keyword">import</span> {\n  <span class="hljs-variable constant_">RECAPTCHA_V3_SITE_KEY</span>,\n  <span class="hljs-title class_">RecaptchaV3Module</span>,\n  <span class="hljs-title class_">RecaptchaLoaderOptions</span>,\n  <span class="hljs-variable constant_">RECAPTCHA_LOADER_OPTIONS</span>,\n  <span class="hljs-title class_">RecaptchaSettings</span>,\n  <span class="hljs-variable constant_">RECAPTCHA_SETTINGS</span>,\n  <span class="hljs-title class_">RecaptchaLoaderService</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;ng-recaptcha&quot;</span>;\n\n<span class="hljs-keyword">import</span> { parseLangFromHref } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../parse-lang-from-href&quot;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">RecaptchaV3DemoComponent</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./v3-demo.component&quot;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./v3-demo.data&quot;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ConfigService</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../config.service&quot;</span>;\n\n<span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Routes</span> = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;&quot;</span>,\n    <span class="hljs-attr">component</span>: <span class="hljs-title class_">RecaptchaV3DemoComponent</span>,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [<span class="hljs-title class_">RecaptchaV3DemoComponent</span>],\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">RouterModule</span>.<span class="hljs-title function_">forChild</span>(routes), <span class="hljs-title class_">RecaptchaV3Module</span>, <span class="hljs-title class_">CommonModule</span>],\n  <span class="hljs-attr">providers</span>: [\n    {\n      <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_V3_SITE_KEY</span>,\n      <span class="hljs-attr">useFactory</span>: <span class="hljs-function">(<span class="hljs-params">config: ConfigService</span>) =&gt;</span> {\n        <span class="hljs-keyword">return</span> config.<span class="hljs-property">recaptchaSiteKeyV3</span>;\n      },\n      <span class="hljs-attr">deps</span>: [<span class="hljs-title class_">ConfigService</span>],\n    },\n    {\n      <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_SETTINGS</span>,\n      <span class="hljs-attr">useFactory</span>: (<span class="hljs-attr">config</span>: <span class="hljs-title class_">ConfigService</span>): <span class="hljs-function"><span class="hljs-params">RecaptchaSettings</span> =&gt;</span> {\n        <span class="hljs-keyword">return</span> { <span class="hljs-attr">siteKey</span>: config.<span class="hljs-property">recaptchaSiteKeyV2</span> };\n      },\n      <span class="hljs-attr">deps</span>: [<span class="hljs-title class_">ConfigService</span>],\n    },\n    {\n      <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_LOADER_OPTIONS</span>,\n      <span class="hljs-attr">useValue</span>: {\n        <span class="hljs-title function_">onBeforeLoad</span>(<span class="hljs-params">url</span>) {\n          <span class="hljs-keyword">const</span> langOverride = <span class="hljs-title function_">parseLangFromHref</span>();\n          <span class="hljs-keyword">if</span> (langOverride) url.<span class="hljs-property">searchParams</span>.<span class="hljs-title function_">set</span>(<span class="hljs-string">&quot;hl&quot;</span>, langOverride);\n\n          <span class="hljs-keyword">return</span> { url };\n        },\n      } <span class="hljs-keyword">as</span> <span class="hljs-title class_">RecaptchaLoaderOptions</span>,\n    },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoModule</span> {}\n'}}}}];let v=(()=>{var a;class t{}return(a=t).\u0275fac=function(l){return new(l||a)},a.\u0275mod=s.oAB({type:a}),a.\u0275inj=s.cJS({providers:[{provide:c.We,useFactory:n=>n.recaptchaSiteKeyV3,deps:[i.E]},{provide:c.BZ,useFactory:n=>({siteKey:n.recaptchaSiteKeyV2}),deps:[i.E]},{provide:c.iV,useValue:{onBeforeLoad(n){const l=(0,u.g)();return l&&n.searchParams.set("hl",l),{url:n}}}}],imports:[h.Bz.forChild(E),c.dw,o.ez]}),t})()}}]);