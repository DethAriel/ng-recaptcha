"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[518],{518:(y,i,l)=>{l.r(i),l.d(i,{DemoModule:()=>q});var d=l(6814),p=l(6223),m=l(9168),c=l(9776),u=l(1386),s=l(9212);let g=(()=>{var a;class o{constructor(){this.formModel={}}}return(a=o).\u0275fac=function(t){return new(t||a)},a.\u0275cmp=s.Xpm({type:a,selectors:[["recaptcha-demo"]],decls:14,vars:5,consts:[["captchaProtectedForm","ngForm"],["name","captcha","required","",3,"ngModel","ngModelChange"],["captchaControl","ngModel"],[1,"error",3,"hidden"],[1,"success",3,"hidden"],[3,"click"]],template:function(t,h){if(1&t&&(s.TgZ(0,"form",null,0)(2,"re-captcha",1,2),s.NdJ("ngModelChange",function(e){return h.formModel.captcha=e}),s.qZA(),s.TgZ(4,"div",3),s._uU(5,"Captcha must be solved"),s.qZA(),s.TgZ(6,"div",4),s._uU(7,"Captcha is valid"),s.qZA(),s.TgZ(8,"div",3),s._uU(9,"The form must be filled out"),s.qZA(),s.TgZ(10,"div",4),s._uU(11,"The form is valid"),s.qZA(),s.TgZ(12,"button",5),s.NdJ("click",function(){return h.formModel.captcha=""}),s._uU(13,"Reset Captcha"),s.qZA()()),2&t){const r=s.MAs(1),e=s.MAs(3);s.xp6(2),s.Q6J("ngModel",h.formModel.captcha),s.xp6(2),s.Q6J("hidden",e.valid||e.pristine),s.xp6(2),s.Q6J("hidden",!e.valid),s.xp6(2),s.Q6J("hidden",r.form.valid),s.xp6(2),s.Q6J("hidden",!r.form.valid)}},dependencies:[c.wT,c.Vd,p._Y,p.JJ,p.JL,p.Q7,p.On,p.F],styles:[".error[_ngcontent-%COMP%]{color:#dc143c}.success[_ngcontent-%COMP%]{color:green}"]}),o})();var j=l(2598);const v=[{path:"",component:g,data:{page:{feature:"forms",title:"Forms Example",content:{component:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@angular/core&quot;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">FormModel</span> {\n  captcha?: <span class="hljs-built_in">string</span>;\n}\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&quot;recaptcha-demo&quot;</span>,\n  <span class="hljs-attr">styles</span>: [\n    <span class="hljs-string">`\n      .error {\n        color: crimson;\n      }\n      .success {\n        color: green;\n      }\n    `</span>,\n  ],\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&quot;./forms-demo.component.html&quot;</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FormsDemoComponent</span> {\n  <span class="hljs-keyword">public</span> <span class="hljs-attr">formModel</span>: <span class="hljs-title class_">FormModel</span> = {};\n}\n',html:'<span class="hljs-tag">&lt;<span class="hljs-name">form</span> #<span class="hljs-attr">captchaProtectedForm</span>=<span class="hljs-string">&quot;ngForm&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">re-captcha</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;formModel.captcha&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;captcha&quot;</span> <span class="hljs-attr">required</span> #<span class="hljs-attr">captchaControl</span>=<span class="hljs-string">&quot;ngModel&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">re-captcha</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> [<span class="hljs-attr">hidden</span>]=<span class="hljs-string">&quot;captchaControl.valid || captchaControl.pristine&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>Captcha must be solved<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> [<span class="hljs-attr">hidden</span>]=<span class="hljs-string">&quot;!captchaControl.valid&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>Captcha is valid<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> [<span class="hljs-attr">hidden</span>]=<span class="hljs-string">&quot;captchaProtectedForm.form.valid&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>The form must be filled out<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> [<span class="hljs-attr">hidden</span>]=<span class="hljs-string">&quot;!captchaProtectedForm.form.valid&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>The form is valid<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;formModel.captcha = &#x27;&#x27;&quot;</span>&gt;</span>Reset Captcha<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n',module:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NgModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@angular/core&quot;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CommonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@angular/common&quot;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@angular/forms&quot;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Routes</span>, <span class="hljs-title class_">RouterModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@angular/router&quot;</span>;\n\n<span class="hljs-keyword">import</span> {\n  <span class="hljs-title class_">RecaptchaFormsModule</span>,\n  <span class="hljs-title class_">RecaptchaModule</span>,\n  <span class="hljs-title class_">RecaptchaSettings</span>,\n  <span class="hljs-title class_">RecaptchaLoaderOptions</span>,\n  <span class="hljs-variable constant_">RECAPTCHA_LOADER_OPTIONS</span>,\n  <span class="hljs-variable constant_">RECAPTCHA_SETTINGS</span>,\n  <span class="hljs-variable constant_">RECAPTCHA_V3_SITE_KEY</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;ng-recaptcha&quot;</span>;\n\n<span class="hljs-keyword">import</span> { parseLangFromHref } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../parse-lang-from-href&quot;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsDemoComponent</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./forms-demo.component&quot;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./forms-demo.data&quot;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ConfigService</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../config.service&quot;</span>;\n\n<span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Routes</span> = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;&quot;</span>,\n    <span class="hljs-attr">component</span>: <span class="hljs-title class_">FormsDemoComponent</span>,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [<span class="hljs-title class_">FormsDemoComponent</span>],\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">RouterModule</span>.<span class="hljs-title function_">forChild</span>(routes), <span class="hljs-title class_">RecaptchaModule</span>, <span class="hljs-title class_">RecaptchaFormsModule</span>, <span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">CommonModule</span>],\n  <span class="hljs-attr">providers</span>: [\n    {\n      <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_V3_SITE_KEY</span>,\n      <span class="hljs-attr">useFactory</span>: <span class="hljs-function">(<span class="hljs-params">config: ConfigService</span>) =&gt;</span> {\n        <span class="hljs-keyword">return</span> config.<span class="hljs-property">recaptchaSiteKeyV3</span>;\n      },\n      <span class="hljs-attr">deps</span>: [<span class="hljs-title class_">ConfigService</span>],\n    },\n    {\n      <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_SETTINGS</span>,\n      <span class="hljs-attr">useFactory</span>: (<span class="hljs-attr">config</span>: <span class="hljs-title class_">ConfigService</span>): <span class="hljs-function"><span class="hljs-params">RecaptchaSettings</span> =&gt;</span> {\n        <span class="hljs-keyword">return</span> { <span class="hljs-attr">siteKey</span>: config.<span class="hljs-property">recaptchaSiteKeyV2</span> };\n      },\n      <span class="hljs-attr">deps</span>: [<span class="hljs-title class_">ConfigService</span>],\n    },\n    {\n      <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_LOADER_OPTIONS</span>,\n      <span class="hljs-attr">useValue</span>: {\n        <span class="hljs-title function_">onBeforeLoad</span>(<span class="hljs-params">url</span>) {\n          <span class="hljs-keyword">const</span> langOverride = <span class="hljs-title function_">parseLangFromHref</span>();\n          <span class="hljs-keyword">if</span> (langOverride) url.<span class="hljs-property">searchParams</span>.<span class="hljs-title function_">set</span>(<span class="hljs-string">&quot;hl&quot;</span>, langOverride);\n\n          <span class="hljs-keyword">return</span> { url };\n        },\n      } <span class="hljs-keyword">as</span> <span class="hljs-title class_">RecaptchaLoaderOptions</span>,\n    },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoModule</span> {}\n'}}}}];let q=(()=>{var a;class o{}return(a=o).\u0275fac=function(t){return new(t||a)},a.\u0275mod=s.oAB({type:a}),a.\u0275inj=s.cJS({providers:[{provide:c.We,useFactory:n=>n.recaptchaSiteKeyV3,deps:[j.E]},{provide:c.BZ,useFactory:n=>({siteKey:n.recaptchaSiteKeyV2}),deps:[j.E]},{provide:c.iV,useValue:{onBeforeLoad(n){const t=(0,u.g)();return t&&n.searchParams.set("hl",t),{url:n}}}}],imports:[m.Bz.forChild(v),c.a,c.lQ,p.u5,d.ez]}),o})()}}]);